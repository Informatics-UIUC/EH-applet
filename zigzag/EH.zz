#
# Generated by RDF2ZZConverter on Fri Apr 16 10:54:57 CDT 2010
#
# @name 	EH for Rachel
# @description 	EH from file<br>
# @creator 	admin
# @date 	Thu Apr 15 23:12:50 CDT 2010
# @rights 	NCSA/UofI open source license
# @tags
# @uri  	http://seasr.org/flows/eh-for-rachel/
#

#
# Specify component imports
#
# TODO: Add component import statement(s) here
# Example: import <URL>   (replace 'URL' with the correct location)
import <http://localhost:1714/public/services/repository.ttl>
#import <file:///Users/lauvil/descriptors/QueryDB.rdf>
#import <file:///Users/lauvil/descriptors/EHConnect.rdf>
#import <file:///Users/lauvil/descriptors/EvolutionHighwayVisualizer.rdf>
#import <file:///Users/lauvil/descriptors/RStoTable.rdf>
#import <file:///Users/lauvil/descriptors/CreateDelimitedFileParser.rdf>
#import <file:///Users/lauvil/descriptors/BasicTableFactoryInjector.rdf>
#import <file:///Users/lauvil/descriptors/ParseFileToTable.rdf>
#import <file:///Users/lauvil/descriptors/InputFileUrl.rdf>
#
# Create the component aliases
#
alias <meandre://seasr.org/components/data-mining/database-resultset-to-table> as DATABASE_RESULTSET_TO_TABLE
alias <meandre://seasr.org/components/ehconnect> as EHCONNECT
alias <meandre://seasr.org/components/evolutionhighwayvisualizer> as EVOLUTIONHIGHWAYVISUALIZER
alias <meandre://seasr.org/components/data-mining/create-delimited-file-parser> as CREATE_DELIMITED_FILE_PARSER
alias <meandre://seasr.org/components/data-mining/basic-table-factory-injector> as BASIC_TABLE_FACTORY_INJECTOR
alias <meandre://seasr.org/components/data-mining/query-database> as QUERY_DATABASE
alias <meandre://seasr.org/components/data-mining/parse-file-to-table> as PARSE_FILE_TO_TABLE
alias <meandre://seasr.org/components/data-mining/input-url-or-path> as INPUT_URL_OR_PATH

#
# Create the component instances
#
basic_table_factory_injector = BASIC_TABLE_FACTORY_INJECTOR()
basic_table_factory_injector_2 = BASIC_TABLE_FACTORY_INJECTOR()
input_url_or_path = INPUT_URL_OR_PATH()
create_delimited_file_parser = CREATE_DELIMITED_FILE_PARSER()
parse_file_to_table = PARSE_FILE_TO_TABLE()
basic_table_factory_injector_3 = BASIC_TABLE_FACTORY_INJECTOR()
parse_file_to_table_2 = PARSE_FILE_TO_TABLE()
input_url_or_path_2 = INPUT_URL_OR_PATH()
connectdb = EHCONNECT()
input_url_or_path_3 = INPUT_URL_OR_PATH()
parse_file_to_table_3 = PARSE_FILE_TO_TABLE()
create_delimited_file_parser_2 = CREATE_DELIMITED_FILE_PARSER()
prefs-query = QUERY_DATABASE()
create_delimited_file_parser_3 = CREATE_DELIMITED_FILE_PARSER()
vis = EVOLUTIONHIGHWAYVISUALIZER()
prefs-table = DATABASE_RESULTSET_TO_TABLE()
basic_table_factory_injector_4 = BASIC_TABLE_FACTORY_INJECTOR()
parse_file_to_table_4 = PARSE_FILE_TO_TABLE()
create_delimited_file_parser_4 = CREATE_DELIMITED_FILE_PARSER()
input_url_or_path_4 = INPUT_URL_OR_PATH()

#
# Set component properties
#


input_url_or_path.password = "null"
input_url_or_path.file_url = "http://localhost/~lauvil/EH2/TestChromosome.txt"
input_url_or_path.username = "null"

create_delimited_file_parser.delimiter = "default"
create_delimited_file_parser.typesRowIndex = "1"
create_delimited_file_parser.labelsRowIndex = "0"

parse_file_to_table.use_blanks = "True"


parse_file_to_table_2.use_blanks = "True"

input_url_or_path_2.password = "null"
input_url_or_path_2.file_url = "http://localhost/~lauvil/EH2/TestCenTel.txt"
input_url_or_path_2.username = "null"


input_url_or_path_3.password = "null"
input_url_or_path_3.file_url = "http://localhost/~lauvil/EH2/TestConsensus.txt"
input_url_or_path_3.username = "null"

parse_file_to_table_3.use_blanks = "True"

create_delimited_file_parser_2.delimiter = "default"
create_delimited_file_parser_2.typesRowIndex = "1"
create_delimited_file_parser_2.labelsRowIndex = "0"

prefs-query.Query_Path = "none"
prefs-query.Query_Statement = "SELECT * FROM EH_REF_GEN_PREFS"

create_delimited_file_parser_3.delimiter = "default"
create_delimited_file_parser_3.typesRowIndex = "1"
create_delimited_file_parser_3.labelsRowIndex = "0"


prefs-table.Discard_Incomplete_Rows = "false"


parse_file_to_table_4.use_blanks = "True"

create_delimited_file_parser_4.delimiter = "default"
create_delimited_file_parser_4.typesRowIndex = "1"
create_delimited_file_parser_4.labelsRowIndex = "0"

input_url_or_path_4.file_url = "http://localhost/~lauvil/EH2/TestAncestral.txt"
input_url_or_path_4.password = "null"
input_url_or_path_4.username = "null"

#
# Create the flow by connecting the components
#
@basic_table_factory_injector_outputs = basic_table_factory_injector()
@parse_file_to_table_outputs = parse_file_to_table()
@basic_table_factory_injector_2_outputs = basic_table_factory_injector_2()
@basic_table_factory_injector_3_outputs = basic_table_factory_injector_3()
@create_delimited_file_parser_4_outputs = create_delimited_file_parser_4()
@create_delimited_file_parser_2_outputs = create_delimited_file_parser_2()
@input_url_or_path_2_outputs = input_url_or_path_2()
@prefs-table_outputs = prefs-table()
@create_delimited_file_parser_outputs = create_delimited_file_parser()
@create_delimited_file_parser_3_outputs = create_delimited_file_parser_3()
@parse_file_to_table_3_outputs = parse_file_to_table_3()
@input_url_or_path_4_outputs = input_url_or_path_4()
@parse_file_to_table_2_outputs = parse_file_to_table_2()
@input_url_or_path_3_outputs = input_url_or_path_3()
@parse_file_to_table_4_outputs = parse_file_to_table_4()
@basic_table_factory_injector_4_outputs = basic_table_factory_injector_4()
@input_url_or_path_outputs = input_url_or_path()
@prefs-query_outputs = prefs-query()
@connectdb_outputs = connectdb()

parse_file_to_table_3(
	table_factory: basic_table_factory_injector_3_outputs.table_factory;
	parser: create_delimited_file_parser_4_outputs.parser
)
parse_file_to_table_2(
	table_factory: basic_table_factory_injector_outputs.table_factory;
	parser: create_delimited_file_parser_3_outputs.parser
)
parse_file_to_table_4(
	parser: create_delimited_file_parser_2_outputs.parser;
	table_factory: basic_table_factory_injector_4_outputs.table_factory
)
prefs-query(Connection: connectdb_outputs.Connection)
parse_file_to_table(
	parser: create_delimited_file_parser_outputs.parser;
	table_factory: basic_table_factory_injector_2_outputs.table_factory
)
create_delimited_file_parser_4(
	webdavClient: input_url_or_path_2_outputs.webdavClient;
	url: input_url_or_path_2_outputs.url
)
create_delimited_file_parser_2(
	url: input_url_or_path_3_outputs.url;
	webdavClient: input_url_or_path_3_outputs.webdavClient
)
create_delimited_file_parser_3(
	webdavClient: input_url_or_path_4_outputs.webdavClient;
	url: input_url_or_path_4_outputs.url
)
prefs-table(
	Connection: prefs-query_outputs.Connection;
	ResultSet: prefs-query_outputs.ResultSet
)
create_delimited_file_parser(
	url: input_url_or_path_outputs.url;
	webdavClient: input_url_or_path_outputs.webdavClient
)
vis(
	Centromere-Telomere-Overlay-Table: parse_file_to_table_3_outputs.table;
	Consensus-Table: parse_file_to_table_4_outputs.table;
	Ancestral-Overlay-Table: parse_file_to_table_2_outputs.table;
	Input-Build-Table: prefs-table_outputs.table;
	Chromosome-Table: parse_file_to_table_outputs.table
)

